# Task ID: 8
# Title: Implement LangGraph Workflow Routing
# Status: pending
# Dependencies: 2, 6, 7
# Priority: high
# Description: Create the workflow routing logic in LangGraph to manage conversation flow between different nodes.
# Details:
1. Create `src/workflows/routing.py` to manage workflow state transitions
2. Implement LangGraph graph definition with nodes:
   ```python
   from langgraph.graph import StateGraph
   
   def create_workflow_graph():
       graph = StateGraph()
       
       # Add nodes
       graph.add_node("intent_detection", intent_detection_node)
       graph.add_node("data_collection", data_collection_node)
       graph.add_node("general_chat", general_chat_node)
       
       # Add edges
       # Implementation
       
       return graph
   ```
3. Define state transitions based on workflow_id and collected data
4. Implement conditional routing logic
5. Create state persistence with Redis
6. Add error handling and recovery mechanisms
7. Implement timeout handling for long-running operations
8. Create logging for workflow transitions
9. Add metrics collection for performance monitoring

# Test Strategy:
1. Test workflow transitions with various input states
2. Verify correct routing based on intent and collected data
3. Test error handling and recovery
4. Validate state persistence across requests
5. Benchmark performance with concurrent workflows
6. Test timeout handling with delayed responses
