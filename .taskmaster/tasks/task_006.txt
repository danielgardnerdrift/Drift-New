# Task ID: 6
# Title: Implement LangGraph Intent Detection Node
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Create the Intent Detection node in LangGraph to determine workflow routing based on user messages.
# Details:
1. Create `src/workflows/intent_detection.py` with IntentDetectionNode class
2. Implement using GPT-3.5-turbo for cost efficiency as specified in PRD
3. Define the node interface:
   ```python
   class IntentDetectionNode:
       def __init__(self, llm_client):
           self.llm = llm_client
           self.model = "gpt-3.5-turbo"
       
       async def detect_intent(self, state: ConversationState) -> WorkflowRoute:
           # Implementation
   ```
4. Create prompt templates for intent detection
5. Implement logic to map user messages to workflow_id (1, 2, or 3)
6. Add structured output parsing with Pydantic models
7. Implement caching for similar queries
8. Add confidence scoring for intent detection
9. Create fallback logic for ambiguous intents
10. Optimize token usage for cost efficiency

# Test Strategy:
1. Write unit tests with sample user messages
2. Test accuracy of intent detection with various inputs
3. Verify correct workflow routing for each intent
4. Test edge cases and ambiguous messages
5. Benchmark performance and response times
6. Validate token usage is optimized
